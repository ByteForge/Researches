
	methods:
		- generateUniqueID():
			- error modes:
				- sensitive ( during development, debug version )
				- tolerant ??? ( show errors, but not security switchess )
				- silent ( release version )
				
			- security switchess / checks:
				- probability safeness ( when length and character set are too low base of generatedIDs.length )
				- min / max length safeness
				- character richness
				- all false safeness ( when all switches are turned off )
		
			- letters & numbers: "aB01gE"
			
			- switches:
				- character sets:
					- as Object:
						- { numbers:true }				
					- number/ numbers [ { numbers:true/1 / false/0 , numbersOnly:true/1 / false/0 } ]
					- letter / letters
					- punctuation / punctuations / symbol / symbols
					- custom				
					- binary / octal / decimal / hexa / base 64:
						- only
						- too				
				- modifier switches:
					- upperCaseLetter / upperCaseLetters
					- lowerCaseLetter / lowerCaseLetters
					- mixedCaseLetters ( detect unicode local protocols )
					- no similar characters
				- only switches:
					- as individual objects:					
						- numbers: numberOnly / numbersOnly / onlyNumber / onlyNumbers
						- letters: letterOnly / lettersOnly / onlyLetter / onlyLetters
						- punctuations: punctuationOnly / punctuationsOnly / onlyPunctuation / onlyPunctuations
					- as array named "only":
						- only : [ "number", "letter", "custom" ]
				- mostly switches:
				
				- start with / end with:
					- letter
					- number
					- symbols / punctuations
					- custom
					- lowerCaseLetter / upperCaseLetter
				
			- first X / last X is / are: ( 000aaa000 )
				- X number/s
			
			- have at least ( min ):
			- have between ( min - max ):
			- have between and mostly ( min - max / mostly ):
			- have exactly ( exactly ):
				- X number
				- X letter
				- X symbols / punctuations
				- X custom				
				- X lower/upperCaseLetter
				
			- include / exclude characters:
			
			- modify given string: ( give string, than modify with given options )
			
			- pattern:
				- number: 0 / 0123456789
				- letter: a / a-z/A-Z
				- symbols # / punctuations: ~ / @
				- custom: / not letter or number or symbols
				- lowerCaseLetters: a-z
				- upperCaseLetters: A-Z
				
			- phonetics:
				- generate from pronounciation words
				- generate TO pronounciation words
				- custom words to generate from ( array:[ "Web" , "Chrome" ] )
				- custom list to generate from:
					- object: { w:"Web" , c:"Chrome" }
					- array:
						- one: [ 
								"w" , "Web" ,
								"c" , "Chrome"
							]
						- embedded: [
								[ "w" , "Web" ] ,
								[ "c" , "Chrome" ]
							]
						- objects within: [
								{ w : "Web" } ,
								{ c : "Chrome" }							]
				
			- generate pronouncable passwords: ( kablacev )
			
			- generate between given range:
				- at least: min
				- between: min - max
				- between and mostly: min - max, mostly/average
				- exactly: 12
				
			- generate from given strings: ( give X strings, generate pass from them, like RC4 )
			
			- sequence generation: ( generate an Array of passwords )
			
			
			
			
			
			
			
			
			
			
			
			