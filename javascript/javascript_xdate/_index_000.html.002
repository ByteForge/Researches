<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
	<title>JavaScript xDate</title>
	
	<script type="text/javascript">
		function trace() {
			var r = '';
			var a = arguments;
			var L = a.length;
			var i = 0;
			for( i = 0 ; i < L ; i++ ) {
				r += a[i];
				if( i+1 < L ) {r += ' , ';}
			}    
			//alert( r );
			console.debug(r);
			//document.body.innerHTML += r + '<br>';
		}
		
		/*
		
		function xDate() { 
			var f = function() {
				return false;
			}
				f.add = function() { return true; }
			
			return f;
		};
		
			xDate[ "+" ] = xDate.add = function() {};
			xDate[ "-" ] = xDate.sub = function() {};
			xDate[ "*" ] = xDate.mult = function() {};
			xDate[ "/" ] = xDate[ ":" ] = xDate[ "÷" ] = xDate.div = function() {};
		
		//trace( xDate , xDate , new xDate() );
		//trace( xDate.add );
		
		var d = new xDate();
		
		trace( d );
		trace( d.add );
		trace( d() );
		
		*/
		
		//trace( "works" );
		
		function toRoman( year ) {
			/*
				STATUS: ALPHA
			*/
			var r = "";
			var y = year;
			
			var i = 0;
			
			var _1000 = parseInt( y / 1000 );			
			if( _1000 > 0 ) {
				i = _1000;
				while( i-- ) { r += "M" };
				y -= _1000 * 1000;
			}			
			//trace( r , y );
			
			var a100 = [ "C" , "CC" , "CCC" , "CD" , "D", "DC", "DCC", "DCCC", "CM" ];
			var _100 = parseInt( y / 100 );			
			if( _100 > 0 ) {
				r += a100[ _100-1 ];
				y -= _100 * 100;
			}			
			//trace( r , y );
			
			var a10 = [ "X" , "XX" , "XXX" , "XL" , "L", "LX", "LXX", "LXXX", "XC" ];
			var _10 = parseInt( y / 10 );			
			if( _10 > 0 ) {				
				r += a10[ _10-1 ];
				y -= _10 * 10;			
			}
			
			var a1 = [ "I" , "II" , "III" , "IV" , "V", "VI", "VII", "VIII", "IX" ];
			var _1 = parseInt( y / 1 );			
			if( _1 > 0 ) {
				r += a1[ _1-1 ];
				y -= _1 * 1;
			}
			
			//trace( r , y );
			
			return r;
		};
		
		function fromRoman( year ) {
			/*
				STATUS: ALPHA
			*/
			a = [ "IV" , 4 , "IX" , 9 , "XL" , 40 , "XC" , 90 , "CD" , 400 , "CM" , 900 ];
			b = [ "I" , 1 , "V" , 5 , "X" , 10 , "L" , 50 , "C" , 100 , "D" , 500 , "M" , 1000 ];
			
			var r = 0;
			var y = year;
			
			var i = 0;
			var L = a.length;
			
			for( i = 0 ; i < L ; i+=2 ) {
				if( y.indexOf( a[ i ] ) > -1 ) {
					y = y.replace( a[ i ] , "" );
					r += a[ i + 1 ];
				}
			}			
			//trace( y , r );
			
			L = b.length;
			for( i = 0 ; i < L ; i+=2 ) {
				if( y.indexOf( b[ i ] ) > -1 ) {
					r += b[ i + 1 ] * ( y.split( b[ i ] ).length-1 );
				}
			}
			
			//trace( r );
			
			return r;
		};
		
		function isLeapYear( year ) {
			return ( year % 4 == 0 && year % 100 == 0 && year % 400 == 0 ) ? true : false ;
		}
		
		//trace( "must be TRUE" , isLeapYear( 1600 ) , isLeapYear( 2000 ) , isLeapYear( 2400 ) , isLeapYear( 2800 ) );
		//trace( "must be FALSE" , isLeapYear( 1700 ) , isLeapYear( 1800 ) , isLeapYear( 1900 ) , isLeapYear( 3000 ) );
		
		//fromRoman( toRoman( 1988 ) );
		
		function xTime( str ) {
			
			//trace( "new stuff" );
			
			//trace( str );
			
			var _multiple_m = new RegExp( "[\d\.\,\ \-].*?(?=m)" , "ig" );
			
			var _rep = new RegExp( "[\,\ \-]{1,}" , "ig" );
			var _day = new RegExp( "[0-9\.\,\ \-]{1,}(?=d)" , "i" );
			var _hour = new RegExp( "[0-9\.\,\ \-]{1,}(?=h)" , "i" );
			var _min = new RegExp( "[0-9\.\,\ \-]{1,}(?=m)" , "i" );
			var _sec = new RegExp( "[0-9\.\,\ \-]{1,}(?=s)" , "i" );
			
			//trace( _day );
			
			//trace( _day.test( str ) );
			
			//trace( str.match( _day ) );
			
			var _m_array = str.match( _multiple_m );
			
			trace( _m_array );
			
			return;
			
			if( _multiple_m.test( str ) ) {
				trace( true );
			}
			
			return;
			
			if( _day.test( str ) ) {
				//trace( str.match( _day ) );
				var r = str.match( _day );
				r = r[ 0 ];
				//trace( r , r[0] );
				//r = r[ 0 ];
				//r = r.replace( _rep , "" );
				r = parseFloat( r.replace( _rep , "" ) );
				//trace( r , r.length );
				trace( r );
			}
		}
		
		//var t = new xTime( " 2 months 3 minutes 4 milliseconds " );

		var j = function() {
			return "it works";
		};		

		trace( a );
		
		var max = Number.MAX_VALUE;
		var _1year = 365 * 24 * 60 * 60 * 1000;
		
		//trace( max );
		//trace( max / _1year );
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	</script>
</head>
	<body>
	</body>
</html>